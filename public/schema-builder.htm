<!DOCTYPE html>
<html>
<head>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="js/schematran.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<link rel="stylesheet" href="/css/style.css" />
<script>

$(document).ready(function(){
  $("#SavePack").click(function() {
      //var testx = tx();
      //$("#cb").html(JSON.stringify(testx));
      if ( gUI_Schema ) {
       var w = window.open();
        $(w.document.body).html(JSON.stringify(gUI_Schema));
      }
  
  });
    $("#ShowUp").click(function() {
      var bx = $("#ShowUp").html();
      if ( bx == '( + )' ) {
          $("#cb").show();
          $("#ed").show();
          $("#ShowUp").text('( - )');
      } else {
          $("#cb").hide();
          $("#ed").hide();      
          $("#ShowUp").text('( + )');
      }
  
  });

  $("#SearchPack").click(function() {
    cinergi_rec();
  });
    $("#GetSrc").click(function() {

    schem_src();
  });
});

var gD3_Schema = "/jsonSchemas/cinergi-mongodb.json", 
    svgReady = false,
    gUI_Schema = {},
    gCin_edit = { 'dateTime' : 'Now', 'editedBy' : 'me', 'changes' : [] },
    maxId =0;
  
</script>
<script src="js/cin-d3jsonTree.js"></script>
<script src="/js/cin-d3-context-menu.js"></script>

<script type="text/javascript">

Array.prototype.contains = function(obj) {
    var i = this.length;
    while (i--) {
        if (this[i] == obj) {
            return true;
        }
    }
    return false;
}


var listEditStack = function() {
  return true;
}

var schem_src = function() {
  var v = $("#ed");
  var inx = $("#pack_text").val();
   try {
      var ned = JSON.parse(inx);
      var treeData = schemaBuild( ned );
      gUI_Schema = treeData;
      //console.log( JSON.stringify(treeData[0]) );
      //$("#cb").html("JSON Build success - " + JSON.stringify(treeData) + '...' );   
      $("#cb").html("JSON Build success - " + JSON.stringify(treeData).substring(1,50) + '...' );   
       svgReady= true; 
       d3.selectAll("svg").remove();
       d3.selectAll('.d3-context-menu').remove();
       var error = {};
       visu(error, treeData);
      $("#cb").hide();
      $("#ed").hide();
   } catch(e) {
       console.log(e);
       $("#cb").html("JSONS Parsing Error " +  e );   
   }
  

}

var cinergi_rec = function() {
// Retrieve sample source from cinergi mongo
  $.ajax({
    type: 'GET',
    url: 'http://localhost:8001/getrecord?pid=48C34542A1604F74BD4B6F6EBF099D46',
    dataType: "json",
    contentType: "application/json",
    success: function(data) {
       $("#cb").html(JSON.stringify(data));
      
      }
    });
}

function search_package() {
  //var inp = $("#searchid").val();
  //var offset = $("#searchlim").val();
  //if (offset.length < 1 ) {
  //  offset = 1;
  //}

  //var pData = { id : inp };
  var id1 = '48C34542A1604F74BD4B6F6EBF099D46'; //20.5000.369/fbaf54464a8013411a24';
  $.ajax({
    type: 'GET',
    url: 'http://localhost:8080/objects/'+id1,
   // data: JSON.stringify(pData),
    dataType: "json",
    contentType: "application/json",
	beforeSend: function (xhr){ 
        xhr.setRequestHeader('Authorization', make_base_auth('admin', 'changeit')); 
    },
    success: function(data) {
      res = data.result;
      var pkg = '<h2>Search Package Results</h2>';
      for (i = 0; i < res.results.length; i++) {
            page_size = i + 1;
            pkg = pkg + '<h2>Result '+ page_size + '</h2>' + JSON.stringify(res.results[i]);
          }
      $("#cb").html(pkg);
      }
  });
 };

 
function make_base_auth(user, password) {
  var tok = user + ':' + password;
  var hash = btoa(tok);
  return "Basic " + hash;
}

function save_fullpackage() {
  var inp = $("#pack_text").val();
  if ( !inp ) {
    alert('nothing to save');
    return;
  }
  inp = JSON.parse(inp);
  $.ajax({ 
    type: 'POST',
    url: 'http://localhost:8080/objects/?type=Document',
    data: JSON.stringify(inp),
    dataType: "json",
	username: "admin",
	password: "changeit",
    contentType: "application/json",  
	beforeSend: function (xhr){ 
        xhr.setRequestHeader('Authorization', make_base_auth('admin', 'changeit')); 
    },
    success: function(data) {
        res = data.result;
        packagelocal = res;
        var pstack = '<h2>Save Package Response</h2>' + JSON.stringify(res,undefined,2);
        $("#cb").html(pstack);

      },

    error: function (jqXHR, status, err) { 
		alert('Save Error : ' + status + ' ' + err)
	}

  });
}

</script>
</head>
<body>
<table width="100%">
<tr class="tr-hdr" >
<td class="td-hdr">Metadata Editor - Schema Builder</td>
<td class="td-hdr">
<button class="action-button" id="GetSrc" >Build Editor Schema</button>
<button class="action-button" id="SavePack" >Show UI Schema JSON</button>
<button class="action-button" id="ShowUp" >( - )</button>
</td>
</tr></table>
Copy and Paste a JSON Schema
<table><tr><td>
<div id="ed">
  <textarea id="pack_text" rows=10 cols=80 ></textarea>
</div>
</td><td>
<div id="cb">
  Results:
</div>
</td></tr>
<tr><td colspan=2>
<div id="tree-container"><div id="showData" style="display: none;"></div></div>
</td></tr>
</table>
</body>